rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection - Users can read basic info of other users and update their own coachId
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow get: if request.auth != null;
      allow list: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Training sessions - users can access their own data, coaches their players' data
    match /training/{sessionId} {
      // Allow read if user is the player or coach referenced in the document
      allow read: if request.auth != null && 
        (resource.data.playerId == request.auth.uid || 
         resource.data.coachId == request.auth.uid);
      
      // Allow create/update if user is the player or coach referenced in the NEW document
      allow create, update: if request.auth != null && 
        (request.resource.data.playerId == request.auth.uid || 
         request.resource.data.coachId == request.auth.uid);
      
      // Allow delete if user is the player or coach referenced in the EXISTING document
      allow delete: if request.auth != null && 
        (resource.data.playerId == request.auth.uid || 
         resource.data.coachId == request.auth.uid);
    }
    
    // Matches - users can access their own data, coaches their players' data
    match /matches/{matchId} {
      allow read: if request.auth != null && 
        (resource.data.playerId == request.auth.uid || 
         resource.data.coachId == request.auth.uid);
      
      allow create, update: if request.auth != null && 
        (request.resource.data.playerId == request.auth.uid || 
         request.resource.data.coachId == request.auth.uid);
      
      allow delete: if request.auth != null && 
        (resource.data.playerId == request.auth.uid || 
         resource.data.coachId == request.auth.uid);
    }
    
    // Goals - users can access their own data, coaches their players' data
    match /goals/{goalId} {
      allow read: if request.auth != null && 
        (resource.data.playerId == request.auth.uid || 
         resource.data.coachId == request.auth.uid);
      
      allow create, update: if request.auth != null && 
        (request.resource.data.playerId == request.auth.uid || 
         request.resource.data.coachId == request.auth.uid);
      
      allow delete: if request.auth != null && 
        (resource.data.playerId == request.auth.uid || 
         resource.data.coachId == request.auth.uid);
    }
    
    // Schedule events - Users can read events they participate in, creators can modify
    match /schedule/{eventId} {
      allow read: if request.auth != null;
      
      allow create, update: if request.auth != null && 
        request.auth.uid == request.resource.data.createdBy;
      
      allow delete: if request.auth != null && 
        request.auth.uid == resource.data.createdBy;
    }
    
    // Coach-player relationships
    match /coach_players/{relationId} {
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.coachId;
      
      allow read: if request.auth != null && 
        (resource.data.coachId == request.auth.uid || 
         resource.data.playerEmail == request.auth.token.email);
      
      allow update: if request.auth != null &&
        resource.data.playerEmail == request.auth.token.email &&
        resource.data.status == "pending" &&
        request.resource.data.status == "accepted";
      
      allow delete: if request.auth != null && 
        resource.data.coachId == request.auth.uid;
    }
  }
}